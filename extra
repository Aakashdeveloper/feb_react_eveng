https://code.visualstudio.com/download
https://nodejs.org/en/
https://github.com/
Basic JavaScript
Npm
React = 3
Mock API
json-server
React-JWT(Login Logout)-1
React(Github)-1
React(Google)-1
Depolyment
-> MERN
-> Docker
-> heroku
-> Nginx
React_hooks -1
githubReact-GarphQL-1
Basic React Native=1
React-Redux =1
/////////////////////////
React-Redux =1
Testing
React-Saga -1
React-with-typescript-1
--------NOT--------------
API
GarphQL
Login/Logout


React
> React is a frontend library/framework of javascript
which help to build single page application
using component

NPM
> Node package Manager

JSON
> Way to reperesnt data
JavaScript Object Notation

[
    {
        name:'John',
        class:'UI'
    },
    {
        name:'Amit',
        class:'Node'
    }
]

>>>>>>>>>>>><<<<<<<<<<<<<<<<
package.json
> entry point to application
> meta data (description,version, author)
> packages
> scripts (start,build,test)


> How to generate package.json
> install packages
> generate react app

..............................
>>>>Step to generate package.json<<<
**NodeJs must be installed in system
> navigate to the folder using terminal/cmd
> type npm init 
> answer all questions
> type yes

//////
step to install package
///////
> go inside the folder
> npm i packagename / npm install packages


packages.json> starting point of app
.gitignore > help stop pushing thing to github
src> contains all dynamic items
public > all static (css,html)
node_modules > all packages

////////////
Step to generate react app
//////
#window

>>One Time<<<
> open cmd as admin 
> npm i -g create-react-app

>>Every Time you want new app<<
> open cmd
> Go inside the folder where you want to generate app
> create-react-app appname

#mac

>>One Time<<<
> open terminal
> sudo npm i -g create-react-app

>>Every Time you want new app<<
> open cmd
> Go inside the folder where you want to generate app
> create-react-app appname

>>>>step to run app<<<<<
** all through cmd
> go inside app folder
> npm start
> localhost:3000

////Component/////
Class Component
> logical Component
> We can mange State
> We use for api call,logic and display

functional Component
> Dumb Component
> We cannot manage state
> we use for display


Hooks Component

State 
> state act like a local variable
> only class component can maintain state
> value of state can be updated
> any data interaction will happen through state only

Props
> props is the way to pass the data
> value of props cannot be updated 
> can be pass through props only if component is nested


///JavaScript///
map
filter
indexof

var a= [2,3,6,8,9,1,4,7]

a.map((data)=>{return data*2})
(8) [4, 6, 12, 16, 18, 2, 8, 14]

var a= [2,3,6,8,9,1,4,7]
a.map((data)=>{return `<h1>${data*2}</h1>`})
(8) ["<h1>4</h1>", "<h1>6</h1>", "<h1>12</h1>", "<h1>16</h1>", "<h1>18</h1>", "<h1>2</h1>", "<h1>8</h1>", "<h1>14</h1>"]


var a= [2,3,6,8,9,1,4,7]
undefined
a.filter((data)=>{return data>2})
(6) [3, 6, 8, 9, 4, 7]
var a= [2,3,6,8,9,1,4,7]
undefined
a.indexOf(2)
0
a.indexOf(9)
4
a.indexOf(10)
-1
a.indexOf(7)
7
a.indexOf(1)
5
a.indexOf("hi")
-1

parent=> child (use props)
child=> parent (use props with function)

functional add(a,b){
    return a+b
}

add(1,2)


/////
npm i react-router-dom

history > redirect
location > for query params
match > for params

params (what you pass after /) (compulsory and need to mention)
queryParams (what you pass after ?) (optional)



(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1

(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/4?roomtype=1

(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500
(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) triptype>       https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook

npm i react-router-dom react-tabs axios

///dummy api
> install global package
> npm i -g json-server

> json-server --watch db.json --port 8700

/////////////
/******GetAllUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role?":"user"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}


npm i
npm start

https://docs.github.com/en/developers/apps/authorizing-oauth-apps

https://www.youtube.com/c/DeveloperFunnel/videos

// firsttime new folder
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/febNode.git
git push -u origin master

// next all Time
git add .
git commit -m "A"
git push

git pull

git clone repourl


////////////////////
npm i -g create-react-native-app
create-react-native-app appname

download app Expo in mobile

npm i apollo-boost apollo-graphql graphql graphql-tag react-apollo

//dev
npm i redux redux-logger react-redux react-slick redux-promise


//test
npm i enzyme enzyme-adapter-react-16 react-addons-test-utils react-test-renderer
